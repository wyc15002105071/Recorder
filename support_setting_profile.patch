diff --git a/common/common.h b/common/common.h
index 0757e94..a484002 100644
--- a/common/common.h
+++ b/common/common.h
@@ -2,7 +2,9 @@
 #define COMMON_H
 
 #include <memory>
-
+#define SZ_1K                   (1024)
+#define SZ_1M                   (SZ_1K*SZ_1K)
+#define SZ_1G                   (SZ_1M*SZ_1M)
 template <typename T>
 using sp = std::shared_ptr<T>;
 
diff --git a/media/mediarecorder.cpp b/media/mediarecorder.cpp
index 8b6eb3c..de01293 100755
--- a/media/mediarecorder.cpp
+++ b/media/mediarecorder.cpp
@@ -1,6 +1,7 @@
 #include "mediarecorder.h"
 #include "common/log.h"
 #include "utils/osdutils.h"
+#include "utils/storageutils.h"
 
 #define MODULE_TAG "MediaRecorder"
 
@@ -29,7 +30,7 @@ void MediaRecorder::run()
     RLOGD("Record Thread start");
     int frameIndex = 0;
     int ret = 0;
-
+    int temp = 0;
     mRecordState = REC_STATE_RUNNING;
     MediaMuxer::MediaPacket packet;
 
@@ -93,6 +94,18 @@ void MediaRecorder::run()
             continue;
         }
 
+        if((temp++ % mVideoCfg.framerate) == 0) {
+            long total,used,free = 0;
+            StorageUtils::get_instance()->getStorageCapacity(VIDEOS_SAVE_DIR,total,used,free);
+            RLOGD("used is %ld",used);
+            if(free <= SZ_1G) {
+                RLOGD("exit:available free memory is low");
+                break;
+            }
+            if(temp >= mVideoCfg.framerate)
+                temp = 0;
+        }
+
         VideoFrameBuffer video_buffer = mBufferlist.front();
 
         mVideoEncoder->sendFrame(video_buffer.dmabuf,frameIndex,mRecordEosFlag);
@@ -122,7 +135,6 @@ void MediaRecorder::run()
             }
 
             mMediaMuxer->writeData(&packet);
-
             encOut.release();
         }
 
@@ -166,7 +178,7 @@ void MediaRecorder::stopTask()
     wait(QUIT_TIMEOUT);
 }
 
-bool MediaRecorder::initVideoRecorder(int width, int height, __u32 format, int type, bool push_stream)
+bool MediaRecorder::initVideoRecorder(int width, int height, __u32 format, int type, bool push_stream, VideoProfile profile)
 {
     mRecordState = REC_STATE_INITIALIZING;
     RKHWEncApi::EncCfgInfo cfg;
@@ -178,6 +190,21 @@ bool MediaRecorder::initVideoRecorder(int width, int height, __u32 format, int t
     cfg.bitrateMode = 1;
     cfg.framerate   = 60;
 
+    switch(profile) {
+    case VideoProfile_Low:
+        cfg.bitRate = (cfg.width * cfg.height / 32) * cfg.framerate;
+        break;
+    case VideoProfile_Standard:
+        cfg.bitRate = (cfg.width * cfg.height / 16) * cfg.framerate;
+        break;
+    case VideoProfile_High:
+        cfg.bitRate = (cfg.width * cfg.height / 8) * cfg.framerate;
+        break;
+    default:
+        cfg.bitRate = (cfg.width * cfg.height / 16) * cfg.framerate;
+        break;
+    }
+
     OSDUtils::createOSD(mOsd,"清阅技术");
 
     RKHWEncApi::OSD_t osd_t;
diff --git a/media/mediarecorder.h b/media/mediarecorder.h
index 1f54f15..02c240d 100755
--- a/media/mediarecorder.h
+++ b/media/mediarecorder.h
@@ -15,11 +15,17 @@ public:
     MediaRecorder();
     ~MediaRecorder();
 
+    typedef enum VideoProfile {
+        VideoProfile_Low,
+        VideoProfile_Standard,
+        VideoProfile_High
+    } VideoProfile_t;
+
     virtual void run();
     virtual bool startTask();
     virtual void stopTask();
 
-    bool initVideoRecorder(int width,int height,__u32 format,int type,bool push_stream);
+    bool initVideoRecorder(int width,int height,__u32 format,int type,bool push_stream,VideoProfile profile = VideoProfile_Standard);
     bool sendVideoFrame(int dma_fd,int size,int width,int height,bool eos);
     void sendVideoFrame(int index);
 
diff --git a/media/rkmpp_dec_api.cpp b/media/rkmpp_dec_api.cpp
index a736aa7..1e2005d 100755
--- a/media/rkmpp_dec_api.cpp
+++ b/media/rkmpp_dec_api.cpp
@@ -176,7 +176,7 @@ REDO:
     ret = p->mppApi->decode_get_frame(p->mppCtx, &frame);
     tryCount++;
     if (MPP_OK != ret || !frame) {
-        if (tryCount < 100) {
+        if (tryCount < 10) {
             RLOGD("need to get frame\n");
             usleep(5 * 1000);
             goto REDO;
@@ -206,10 +206,6 @@ REDO:
         out_frame->vir_addr = mpp_buffer_get_ptr_with_caller(mppBuffer,nullptr);
         out_frame->handler = frame;
         out_frame->buffer = mppBuffer;
-        FILE *fp = fopen("test.yuv","wb");
-        fwrite(out_frame->vir_addr,1,out_frame->width*out_frame->height*3/2,fp);
-        fclose(fp);
-
     }
 
     return ret;
diff --git a/media/videoinputdevice.cpp b/media/videoinputdevice.cpp
index 6593d23..c24c796 100755
--- a/media/videoinputdevice.cpp
+++ b/media/videoinputdevice.cpp
@@ -146,11 +146,11 @@ bool VideoInputDevice::startTask()
     return true;
 }
 
-void VideoInputDevice::startRecord(bool push)
+void VideoInputDevice::startRecord(MediaRecorder::VideoProfile profile,bool push)
 {
     //    mLock.lock();
     if(mRecorder) {
-        mRecorder->initVideoRecorder(mStreamInfo.width,mStreamInfo.height,mStreamInfo.format,MPP_VIDEO_CodingAVC, push);
+        mRecorder->initVideoRecorder(mStreamInfo.width,mStreamInfo.height,mStreamInfo.format,MPP_VIDEO_CodingAVC, push,profile);
         mRecorder->startTask();
     }
 
diff --git a/media/videoinputdevice.h b/media/videoinputdevice.h
index c3c8e06..9552977 100755
--- a/media/videoinputdevice.h
+++ b/media/videoinputdevice.h
@@ -31,7 +31,7 @@ public:
 
     bool    initDevice(bool is_hdmi_in);
     void    deinit();
-    void    startRecord(bool push = false);
+    void    startRecord(MediaRecorder::VideoProfile profile = MediaRecorder::VideoProfile_Standard, bool push = false);
     void    stopRecord();
     void    startPush();
     void    stopPush();
diff --git a/utils/thumbnailutils.cpp b/utils/thumbnailutils.cpp
index 7d92bb5..f7e73bc 100755
--- a/utils/thumbnailutils.cpp
+++ b/utils/thumbnailutils.cpp
@@ -146,12 +146,13 @@ REDO:
 
         memset(&out_frame,0,sizeof(RKHWDecApi::OutputFrame));
         ret = mDecoder.getOutputFrame(&out_frame);
-        RKHWDecApi::OutputFrame rgb_frame;
-        mDecoder.convertNV12ToRGB(&out_frame,&rgb_frame);
-
-        img = QImage((uchar *)rgb_frame.vir_addr,rgb_frame.width,rgb_frame.height,QImage::Format_RGBA8888);
-        mDecoder.deinitOutputFrame(&out_frame);
-        mDecoder.deinitOutputFrame(&rgb_frame);
+        if(ret == MPP_OK) {
+            RKHWDecApi::OutputFrame rgb_frame;
+            mDecoder.convertNV12ToRGB(&out_frame,&rgb_frame);
+            img = QImage((uchar *)rgb_frame.vir_addr,rgb_frame.width,rgb_frame.height,QImage::Format_RGBA8888);
+            mDecoder.deinitOutputFrame(&out_frame);
+            mDecoder.deinitOutputFrame(&rgb_frame);
+        }
         av_packet_unref(&packet);
 
     } else if(type == Type_Unkown) {
diff --git a/widgets/viewer/imageviewer.cpp b/widgets/viewer/imageviewer.cpp
index e360939..e67bc33 100755
--- a/widgets/viewer/imageviewer.cpp
+++ b/widgets/viewer/imageviewer.cpp
@@ -43,6 +43,9 @@ void ImageViewer::open()
 
 void ImageViewer::onItemClicked(QListWidgetItem *item)
 {
+    QScroller *scroller = QScroller::scroller(mListViewer);
+    if(scroller && scroller->state() != QScroller::Inactive)
+        return;
     if(mSelectMode) {
         ListWidgetItem *item_widget = (ListWidgetItem *)mListViewer->itemWidget(item);
         if(!item_widget)
diff --git a/widgets/viewer/videoviewer.cpp b/widgets/viewer/videoviewer.cpp
index 202f22b..a4af02b 100755
--- a/widgets/viewer/videoviewer.cpp
+++ b/widgets/viewer/videoviewer.cpp
@@ -113,6 +113,9 @@ void VideoViewer::open()
 
 void VideoViewer::onItemClicked(QListWidgetItem *item)
 {
+    QScroller *scroller = QScroller::scroller(mListViewer);
+    if(scroller && scroller->state() != QScroller::Inactive)
+        return;
     if(mSelectMode) {
         ListWidgetItem *item_widget = (ListWidgetItem *)mListViewer->itemWidget(item);
         if(!item_widget)
